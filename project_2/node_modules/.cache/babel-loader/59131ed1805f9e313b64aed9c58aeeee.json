{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n/*\n  props: The properties coming from the element that's cloning it's children\n  obj: Object of values to be passed down to the children\n*/\n\n\nexports.default = function (props) {\n  var obj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var children = props.children,\n      rest = _objectWithoutProperties(props, ['children']);\n\n  var newProps = Object.assign(rest, obj); // Clone the children and add props to components like data, width and heigth\n\n  return _react.Children.map(children, function (child) {\n    // only pass data into Components not native browser elements\n    var isComponent = typeof child.type !== 'string';\n\n    if (isComponent) {\n      var childProps = Object.assign({}, newProps, child.props);\n      return _react2.default.cloneElement(child, // user can overwrite props on children\n      childProps);\n    }\n\n    return _react2.default.cloneElement(child);\n  });\n};","map":null,"metadata":{},"sourceType":"script"}