{"ast":null,"code":"var _jsxFileName = \"D:\\\\ELK_6.5_LM\\\\logr\\\\src\\\\components\\\\GuageChart.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, FormGroup, FormControl, ControlLabel, Grid, Row, Col } from 'react-bootstrap';\nimport '../resources/styles/guageChart.css';\nimport Label from './Label.js';\nimport LiquidChart from 'react-liquidchart';\n\nvar GuageChart = function GuageChart(props) {\n  return React.createElement(\"div\", {\n    className: \"meter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Row, {\n    style: {\n      padding: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Label, {\n    text: \"Syslog Severity Level: \" + props.logLevelDescription,\n    color: \"#000\",\n    size: \"14px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })), React.createElement(Col, {\n    xs: 12,\n    md: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Label, {\n    text: \"Top originator appliances\",\n    color: \"#000\",\n    size: \"14px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }))), React.createElement(Row, {\n    className: \"show-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '200px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(LiquidChart, {\n    responsive: true,\n    legend: \"Percentage of total packet count ~{''\\n'} (\" + props.totalPackets + \")\",\n    value: props.valueCount,\n    showDecimal: true,\n    amplitude: 4,\n    frequency: 2,\n    animationTime: 2000,\n    animationWavesTime: 2250,\n    gradient: {\n      type: 1,\n      x1: 0,\n      x2: 0,\n      y1: 100,\n      y2: 0\n    },\n    postfix: props.postfix,\n    legendFontSize: 0.1,\n    liquidStyle: {\n      fill: props.fillcolor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    xs: 12,\n    md: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, props.topApplicances.length > 0 ? props.topApplicances.map(function (value, index) {\n    return React.createElement(Button, {\n      onClick: props.onApplicanceClick,\n      key: index,\n      name: value.key,\n      value: props.logLevel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, value.key + ' (' + value.doc_count + \")\");\n  }) : React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"No Appliance\")))));\n};\n\nGuageChart.propTypes = {\n  valueCount: PropTypes.number,\n  postfix: PropTypes.string,\n  totalPackets: PropTypes.number,\n  logLevelDescription: PropTypes.string,\n  topApplicances: PropTypes.array,\n  onApplicanceClick: PropTypes.func,\n  logLevel: PropTypes.number,\n  fillcolor: PropTypes.string\n};\nexport default GuageChart;","map":{"version":3,"sources":["D:\\ELK_6.5_LM\\logr\\src\\components\\GuageChart.js"],"names":["React","Component","PropTypes","Button","FormGroup","FormControl","ControlLabel","Grid","Row","Col","Label","LiquidChart","GuageChart","props","padding","logLevelDescription","width","height","totalPackets","valueCount","type","x1","x2","y1","y2","postfix","fill","fillcolor","topApplicances","length","map","value","index","onApplicanceClick","key","logLevel","doc_count","propTypes","number","string","array","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, FormGroup, FormControl, ControlLabel,Grid,Row,Col } from 'react-bootstrap';\r\nimport '../resources/styles/guageChart.css';\r\nimport Label from './Label.js';\r\nimport LiquidChart from 'react-liquidchart';\r\n\r\nconst GuageChart = (props) => (\r\n  <div className=\"meter\">\r\n    <Grid>\r\n        <Row style={{padding:'10px'}}>\r\n          <Col xs={12} md={4}>\r\n            <Label text={\"Syslog Severity Level: \" + props.logLevelDescription} color={\"#000\"} size={\"14px\"}></Label>\r\n          </Col>\r\n          <Col xs={12} md={8}>\r\n            <Label text={\"Top originator appliances\"} color={\"#000\"} size={\"14px\"}></Label>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"show-grid\">\r\n          <Col xs={12} md={4}>\r\n          <div style={{\r\n             width: '100%',\r\n             height: '200px',\r\n           }}>\r\n           <LiquidChart\r\n               responsive\r\n               legend={\"Percentage of total packet count ~{''\\n'} (\" + props.totalPackets + \")\"}\r\n               value={props.valueCount}\r\n               showDecimal\r\n               amplitude={4}\r\n               frequency={2}\r\n               animationTime={2000}\r\n               animationWavesTime={2250}\r\n               gradient={{\r\n                 type: 1,\r\n                 x1: 0,\r\n                 x2: 0,\r\n                 y1: 100,\r\n                 y2: 0\r\n               }}\r\n               postfix={props.postfix}\r\n               legendFontSize={0.1}\r\n               liquidStyle = {{ fill: props.fillcolor}}\r\n           />\r\n       </div>\r\n          </Col>\r\n          <Col xs={12} md={8}>\r\n          {\r\n            (props.topApplicances.length > 0)?(props.topApplicances.map((value,index)=>\r\n            {\r\n              return <Button onClick={props.onApplicanceClick} key={index} name={value.key} value={props.logLevel}>{value.key + ' (' + value.doc_count+\")\"}</Button>\r\n            })):<Button>No Appliance</Button>\r\n          }\r\n            {/*{\r\n              (props.topApplicances.length > 0)?(props.topApplicances.map((value,index)=>\r\n              {\r\n                return <Button onClick={props.onApplicanceClick} key={index} name={value.key} value={props.logLevel}>{value.key + ' (' + value.doc_count+\")\"}</Button>\r\n              })):<Button>No Appliance</Button>\r\n            }*/}\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n  </div>\r\n);\r\n\r\nGuageChart.propTypes = {\r\n  valueCount : PropTypes.number,\r\n  postfix : PropTypes.string,\r\n  totalPackets: PropTypes.number,\r\n  logLevelDescription: PropTypes.string,\r\n  topApplicances: PropTypes.array,\r\n  onApplicanceClick: PropTypes.func,\r\n  logLevel : PropTypes.number,\r\n  fillcolor : PropTypes.string\r\n};\r\n\r\nexport default GuageChart;\r\n"]},"metadata":{},"sourceType":"module"}