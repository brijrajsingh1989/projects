{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.chartProps = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = require('lodash.throttle');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _resizeObserverPolyfill = require('resize-observer-polyfill');\n\nvar _resizeObserverPolyfill2 = _interopRequireDefault(_resizeObserverPolyfill);\n\nvar _ReactIf = require('./ReactIf');\n\nvar _ReactIf2 = _interopRequireDefault(_ReactIf);\n\nvar _cloneChildren = require('../Utils/cloneChildren');\n\nvar _cloneChildren2 = _interopRequireDefault(_cloneChildren);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar chartProps = exports.chartProps = {\n  // enables listen to window width change and rerenders the chart\n  // on resize\n  responsive: _propTypes2.default.bool,\n  // if not responsive then user can set width and height\n  width: _propTypes2.default.number,\n  height: _propTypes2.default.number,\n  id: _propTypes2.default.string,\n  className: _propTypes2.default.string\n};\n\nvar Chart = function (_Component) {\n  _inherits(Chart, _Component);\n\n  function Chart(props) {\n    _classCallCheck(this, Chart);\n\n    var _this = _possibleConstructorReturn(this, (Chart.__proto__ || Object.getPrototypeOf(Chart)).call(this, props));\n\n    _this.state = {\n      width: null,\n      height: null\n    };\n    /*\n      if user wants to rerender for all resize events then store the function\n      as this.resize and throttle it so it does not refire many times during resize\n    */\n\n    if (_this.props.responsive === true) {\n      _this.onResize = _this.onResize.bind(_this);\n    }\n\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.responsive === true) {\n        this.ro = new _resizeObserverPolyfill2.default(function (ent, obs) {\n          _this2.onResize();\n        });\n        this.ro.observe(this.chart);\n      }\n\n      this.onResize();\n    }\n    /*\n      unregister on unmount\n     */\n\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.ro) {\n        this.ro.disconnect();\n      }\n    }\n  }, {\n    key: 'onResize',\n    value: function onResize() {\n      if (this.props.responsive) {\n        var dimension = this.chart.getBoundingClientRect();\n        this.setState({\n          width: dimension.width,\n          height: dimension.height\n        });\n      } else {\n        this.setState({\n          width: this.props.width,\n          height: this.props.height\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this; // Copy the state to pass down to the children\n\n\n      var obj = {\n        width: this.state.width,\n        height: this.state.height\n      }; // make the chart take up the whole width and height of the parent if its responsive\n\n      var style = void 0;\n\n      if (this.props.responsive) {\n        style = {\n          width: '100%',\n          height: '100%'\n        };\n      } else {\n        style = {\n          width: this.props.width,\n          height: this.props.height\n        };\n      }\n\n      return _react2.default.createElement('div', {\n        style: style,\n        ref: function ref(c) {\n          _this3.chart = c;\n        },\n        id: this.props.id,\n        className: this.props.className\n      }, _react2.default.createElement(_ReactIf2.default, {\n        condition: this.state.height !== undefined && this.state.height !== null && this.state.height !== 0\n      }, _react2.default.createElement('svg', {\n        width: '100%',\n        height: '100%'\n      }, (0, _cloneChildren2.default)(this.props, obj))));\n    }\n  }]);\n\n  return Chart;\n}(_react.Component);\n\nChart.propTypes = chartProps;\nexports.default = Chart;","map":null,"metadata":{},"sourceType":"script"}