{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\ELK_6.5_LM\\\\logr\\\\src\\\\components\\\\meter.js\";\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, FormGroup, FormControl, ControlLabel, Grid, Row, Col } from 'react-bootstrap';\nimport '../resources/styles/meter.css';\nimport { Animated } from \"react-animated-css\";\nimport ReactSpeedometer from \"react-d3-speedometer\";\nimport Label from './Label.js';\n\nvar Meter = function Meter(props) {\n  return React.createElement(\"div\", {\n    className: \"meter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: \"override_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"show-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    md: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Label, {\n    text: \"Start Date\",\n    color: \"#000\",\n    size: \"12px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })), React.createElement(Col, {\n    xs: 12,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Datetime, {\n    className: \"datePickerField\",\n    value: _this.state.startDate,\n    onChange: _this.onStartDateChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })), React.createElement(Col, {\n    xs: 12,\n    md: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Label, {\n    text: \"End Date\",\n    color: \"#000\",\n    size: \"12px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(Col, {\n    xs: 12,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Datetime, {\n    className: \"datePickerField\",\n    value: _this.state.endDate,\n    defaultValue: new Date(),\n    onChange: _this.onEndDateChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(Col, {\n    xs: 12,\n    md: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Button, {\n    bsStyle: \"primary\",\n    className: \"button userPagebtn\",\n    bsSize: \"small\",\n    onClick: _this.onGenerateReportsClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Apply\")))), React.createElement(Grid, {\n    style: {\n      width: \"500px\",\n      height: \"300px\",\n      background: \"#EFEFEF\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Label, {\n    text: props.text,\n    color: \"#000\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 12,\n    lg: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(ReactSpeedometer, {\n    maxValue: 500,\n    value: 473,\n    needleColor: \"purple\",\n    startColor: \"green\",\n    segments: 10,\n    endColor: \"red\",\n    width: 300,\n    height: 300,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(Col, {\n    sm: 12,\n    lg: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outline-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, props.text)))));\n};\n\nMeter.propTypes = {\n  text: PropTypes.string\n};\nexport default Meter;","map":{"version":3,"sources":["D:\\ELK_6.5_LM\\logr\\src\\components\\meter.js"],"names":["React","Component","PropTypes","Button","FormGroup","FormControl","ControlLabel","Grid","Row","Col","Animated","ReactSpeedometer","Label","Meter","props","state","startDate","onStartDateChange","endDate","Date","onEndDateChange","onGenerateReportsClick","width","height","background","text","propTypes","string"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, FormGroup, FormControl, ControlLabel,Grid,Row,Col } from 'react-bootstrap';\r\nimport '../resources/styles/meter.css';\r\nimport {Animated} from \"react-animated-css\";\r\nimport ReactSpeedometer from \"react-d3-speedometer\";\r\nimport Label from './Label.js';\r\n\r\nconst Meter = (props) => (\r\n    <div className=\"meter\">\r\n      <Grid className=\"override_container\">\r\n          <Row className=\"show-grid\">\r\n            <Col xs={12} md={2}>\r\n              <Label text={\"Start Date\"} color={\"#000\"} size={\"12px\"}></Label>\r\n            </Col>\r\n            <Col xs={12} md={3}>\r\n                  <Datetime className=\"datePickerField\" value={this.state.startDate} onChange={this.onStartDateChange}/>\r\n            </Col>\r\n            <Col xs={12} md={2}>\r\n              <Label text={\"End Date\"} color={\"#000\"} size={\"12px\"}></Label>\r\n            </Col>\r\n            <Col xs={12} md={3}>\r\n                  <Datetime className=\"datePickerField\" value={this.state.endDate} defaultValue={new Date()} onChange={this.onEndDateChange}/>\r\n            </Col>\r\n            <Col xs={12} md={2}>\r\n              <Button bsStyle=\"primary\" className=\"button userPagebtn\" bsSize=\"small\" onClick={this.onGenerateReportsClick}>\r\n                Apply\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n\r\n        <Grid style={{width: \"500px\", height: \"300px\", background: \"#EFEFEF\"}}>\r\n            <Row><Col><Label text={props.text} color={\"#000\"}></Label></Col></Row>\r\n            <Row>\r\n              <Col sm={12} lg={8}>\r\n                  <ReactSpeedometer\r\n                      maxValue={500}\r\n                      value={473}\r\n                      needleColor=\"purple\"\r\n                      startColor=\"green\"\r\n                      segments={10}\r\n                      endColor=\"red\"\r\n                      width={300}\r\n                      height={300}\r\n                      />\r\n                </Col>\r\n\r\n                <Col sm={12} lg={4}>\r\n                    <Button variant=\"outline-primary\">{props.text}</Button>\r\n                </Col>\r\n            </Row>\r\n        </Grid>\r\n    </div>\r\n);\r\n\r\nMeter.propTypes = {\r\n    text: PropTypes.string\r\n};\r\n\r\nexport default Meter;\r\n"]},"metadata":{},"sourceType":"module"}