{"ast":null,"code":"import _classCallCheck from \"D:\\\\ELK_6.5_LM\\\\logr\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\ELK_6.5_LM\\\\logr\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\ELK_6.5_LM\\\\logr\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\ELK_6.5_LM\\\\logr\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\ELK_6.5_LM\\\\logr\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\ELK_6.5_LM\\\\logr\\\\src\\\\Modules\\\\Report\\\\Analytics.js\";\nimport React, { Component } from 'react';\nimport { Button, FormGroup, FormControl, ControlLabel, Grid, Row, Col, Tooltip, OverlayTrigger } from 'react-bootstrap';\nimport './../../resources/styles/style.css';\nimport './Report.css';\nimport Label from './../../components/Label.js';\nimport TextBox from './../../components/TextBox.js';\nimport { Animated } from \"react-animated-css\";\nimport Iframe from 'react-iframe';\nimport Header from './../../components/Header.js';\nimport Config from '../Config/Config.js';\nimport SmoothieComponent from 'react-smoothie';\nimport axios from 'axios';\nimport Chart from 'react-google-charts';\nimport Loader from 'react-loader-spinner';\nimport API from './../../Config/api.json'; // import {PieChart} from 'react-easy-chart';\n\nimport ReactSvgPieChart from \"react-svg-piechart\";\n\nvar Analytics =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Analytics, _Component);\n\n  function Analytics(props) {\n    var _this;\n\n    _classCallCheck(this, Analytics);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Analytics).call(this, props));\n    _this.state = {\n      logLevel: [],\n      loader: false\n    };\n    return _this;\n  }\n\n  _createClass(Analytics, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var thisObj = this;\n      this.setState({\n        logLevel: [{\n          title: \"Emergency (70)\",\n          value: 70,\n          color: \"#ef0000\"\n        }, {\n          title: \"Alert\",\n          value: 60,\n          color: \"#FFA500\"\n        }, {\n          title: \"Critical\",\n          value: 30,\n          color: \"#3da18d\"\n        }, {\n          title: \"Error\",\n          value: 20,\n          color: \"#ffa578\"\n        }, {\n          title: \"Warning\",\n          value: 10,\n          color: \"#ff78a9\"\n        }, {\n          title: \"Notice\",\n          value: 100,\n          color: \"#1911bf\"\n        }, {\n          title: \"Informational\",\n          value: 100,\n          color: \"#10bf67\"\n        }, {\n          title: \"Debug\",\n          value: 100,\n          color: \"#00e822\"\n        }]\n      });\n      var ts1 = this.refs.chart.addTimeSeries({\n        strokeStyle: 'rgba(0, 255, 0, 1)',\n        fillStyle: 'rgba(0, 255, 0, 0.1)',\n        lineWidth: 1\n      }); // var ts2 = this.refs.chart.addTimeSeries({\n      //   strokeStyle: 'rgba(255, 0, 0, 1)',\n      //   fillStyle: 'rgba(255, 0, 0, 0.2)',\n      //   lineWidth: 4,\n      // });\n\n      this.dataGenerator = setInterval(function () {\n        var time = new Date().getTime(); // Generate times slightly in the future\n\n        time += 1000;\n        axios.get(API.current.apiUrl + '/api/v1/cpuinfo').then(function (res) {\n          console.log(res.data.cpu);\n          ts1.append(time, res.data.cpu); //ts2.append(time, Math.random());\n        }).catch(function (err) {\n          console.log(err);\n        });\n      }, 1000); // let pageObj = this;\n      //\n      // let inpData = {\n      //   'endDate': (new Date()).toISOString(),\n      //   'startDate': (new Date((new Date()).getTime() - (7 * 24 * 60 * 60 * 1000))).toISOString()\n      // }\n      //\n      // axios.post(API.current.apiUrl+'/api/v1/elastic', inpData).then(function(res){\n      //\n      //       pageObj.setState({logLevel:res.data});\n      //       console.log('res.data',res.data);\n      //       console.log('this.state.logLevel.Emergency', pageObj.state.logLevel.Emergency);\n      //\n      // }).catch(function(err)\n      // {\n      //   console.log('err', err);\n      // });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.dataGenerator);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"logStatesDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 12,\n        md: 12,\n        style: {\n          padding: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(SmoothieComponent, {\n        ref: \"chart\",\n        responsive: true,\n        interpolation: \"smooth\",\n        minValue: 0,\n        maxValue: 100,\n        strokeStyle: \"#ffffff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(Label, {\n        weight: \"bold\",\n        text: \"CPU States\",\n        color: \"#000\",\n        size: \"10px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        className: \"logStatesDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 12,\n        md: 12,\n        style: {\n          padding: '5px',\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          width: '200px',\n          height: '200px',\n          margin: '0 auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(ReactSvgPieChart, {\n        expandOnHover: true,\n        expandSize: 5,\n        shrinkOnTouchEnd: false,\n        strokeColor: \"#fff\",\n        strokeLinejoin: \"miter\",\n        strokeWidth: 1,\n        viewBoxSize: 100,\n        data: this.state.logLevel,\n        transitionDuration: \"1s\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })), React.createElement(Label, {\n        weight: \"bold\",\n        text: \"Error States For Last 7 Days\",\n        color: \"#000\",\n        size: \"10px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })))), this.state.loader ? React.createElement(\"div\", {\n        className: \"fadeMe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          left: '45%',\n          top: '40%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        type: \"ThreeDots\",\n        color: \"#00BFFF\",\n        height: \"150\",\n        width: \"150\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Analytics;\n}(Component);\n\nexport default Analytics;","map":{"version":3,"sources":["D:\\ELK_6.5_LM\\logr\\src\\Modules\\Report\\Analytics.js"],"names":["React","Component","Button","FormGroup","FormControl","ControlLabel","Grid","Row","Col","Tooltip","OverlayTrigger","Label","TextBox","Animated","Iframe","Header","Config","SmoothieComponent","axios","Chart","Loader","API","ReactSvgPieChart","Analytics","props","state","logLevel","loader","thisObj","setState","title","value","color","ts1","refs","chart","addTimeSeries","strokeStyle","fillStyle","lineWidth","dataGenerator","setInterval","time","Date","getTime","get","current","apiUrl","then","res","console","log","data","cpu","append","catch","err","clearInterval","padding","textAlign","width","height","margin","position","left","top"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Button, FormGroup, FormControl, ControlLabel, Grid, Row, Col, Tooltip, OverlayTrigger} from 'react-bootstrap';\r\nimport './../../resources/styles/style.css';\r\nimport './Report.css';\r\nimport Label from './../../components/Label.js';\r\nimport TextBox from './../../components/TextBox.js';\r\nimport {Animated} from \"react-animated-css\";\r\nimport Iframe from 'react-iframe';\r\nimport Header from './../../components/Header.js';\r\nimport Config from '../Config/Config.js';\r\nimport SmoothieComponent from 'react-smoothie';\r\nimport axios from 'axios';\r\nimport Chart from 'react-google-charts';\r\nimport Loader from 'react-loader-spinner';\r\nimport API from './../../Config/api.json';\r\n// import {PieChart} from 'react-easy-chart';\r\nimport ReactSvgPieChart from \"react-svg-piechart\"\r\n\r\n\r\nclass Analytics extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {logLevel:[], loader:false};\r\n  }\r\n\r\n  componentDidMount() {\r\n      let thisObj = this;\r\n\r\n      this.setState({logLevel:[\r\n        {title: \"Emergency (70)\", value: 70, color: \"#ef0000\"},\r\n        {title: \"Alert\", value: 60, color: \"#FFA500\"},\r\n        {title: \"Critical\", value: 30, color: \"#3da18d\"},\r\n        {title: \"Error\", value: 20, color: \"#ffa578\"},\r\n        {title: \"Warning\", value: 10, color: \"#ff78a9\"},\r\n        {title: \"Notice\", value: 100, color: \"#1911bf\"},\r\n        {title: \"Informational\", value: 100, color: \"#10bf67\"},\r\n        {title: \"Debug\", value: 100, color: \"#00e822\"},\r\n      ]})\r\n\r\n      var ts1 = this.refs.chart.addTimeSeries({\r\n        strokeStyle: 'rgba(0, 255, 0, 1)',\r\n        fillStyle: 'rgba(0, 255, 0, 0.1)',\r\n        lineWidth: 1,\r\n      });\r\n      // var ts2 = this.refs.chart.addTimeSeries({\r\n      //   strokeStyle: 'rgba(255, 0, 0, 1)',\r\n      //   fillStyle: 'rgba(255, 0, 0, 0.2)',\r\n      //   lineWidth: 4,\r\n      // });\r\n      this.dataGenerator = setInterval(function() {\r\n        var time = new Date().getTime();\r\n        // Generate times slightly in the future\r\n        time += 1000;\r\n        axios.get(API.current.apiUrl+'/api/v1/cpuinfo').then(function(res){\r\n          console.log(res.data.cpu);\r\n\r\n          ts1.append(time, res.data.cpu);\r\n          //ts2.append(time, Math.random());\r\n        }).catch(function(err){\r\n          console.log(err);\r\n        })\r\n\r\n      }, 1000);\r\n\r\n      // let pageObj = this;\r\n      //\r\n      // let inpData = {\r\n      //   'endDate': (new Date()).toISOString(),\r\n      //   'startDate': (new Date((new Date()).getTime() - (7 * 24 * 60 * 60 * 1000))).toISOString()\r\n      // }\r\n      //\r\n      // axios.post(API.current.apiUrl+'/api/v1/elastic', inpData).then(function(res){\r\n      //\r\n      //       pageObj.setState({logLevel:res.data});\r\n      //       console.log('res.data',res.data);\r\n      //       console.log('this.state.logLevel.Emergency', pageObj.state.logLevel.Emergency);\r\n      //\r\n      // }).catch(function(err)\r\n      // {\r\n      //   console.log('err', err);\r\n      // });\r\n    }\r\n\r\n  componentWillUnmount()\r\n  {\r\n    clearInterval(this.dataGenerator);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <Grid>\r\n                  <Row className=\"logStatesDiv\">\r\n                      {/*<Col xs={12} md={6}>\r\n                          <Label text={\"CPU States\"} color=\"#000\"></Label>\r\n                      </Col>*/}\r\n\r\n                      <Col xs={12} md={12}  style={{padding:'5px'}}>\r\n                            <SmoothieComponent ref=\"chart\" responsive={true} interpolation=\"smooth\" minValue={0}  maxValue={100} strokeStyle=\"#ffffff\"/>\r\n\r\n                                <Label weight=\"bold\" text={\"CPU States\"} color=\"#000\" size=\"10px\"></Label>\r\n                      </Col>\r\n                  </Row>\r\n\r\n                  <Row className=\"logStatesDiv\">\r\n                      <Col xs={12} md={12}  style={{padding:'5px', textAlign:'center'}}>\r\n                        <div style={{width:'200px', height:'200px', margin:'0 auto'}}>\r\n                          <ReactSvgPieChart\r\n                              expandOnHover={true}\r\n                              expandSize={5}\r\n                              shrinkOnTouchEnd={false}\r\n                              strokeColor=\"#fff\"\r\n                              strokeLinejoin=\"miter\"\r\n                              strokeWidth={1}\r\n                              viewBoxSize={100}\r\n                              data = {this.state.logLevel}\r\n                              transitionDuration={\"1s\"}\r\n                            />\r\n                        </div>\r\n                            {/*<Chart\r\n                                width={'100%'}\r\n                                height={'100%'}\r\n                                chartType=\"PieChart\"\r\n                                loader={<div><Loader\r\n                                   type=\"ThreeDots\"\r\n                                   color=\"#00BFFF\"\r\n                                   height=\"150\"\r\n                                   width=\"150\"\r\n                                /></div>}\r\n                                data=\r\n                                {[\r\n                                      ['LogLevel', 'Count'],\r\n                                      ['Emergency', 17],\r\n                                      ['Alert', 29],\r\n                                      ['Critical', 11],\r\n                                      ['Error', 21],\r\n                                      ['Warning', 92],\r\n                                      ['Notice', 132],\r\n                                      ['Informational', 371],\r\n                                      ['Debug', 536]\r\n                                  ]}\r\n                                options={{\r\n                                title: '',\r\n                                is3D: true,\r\n                                slices: {\r\n                                          0: {color: '#ef0000'},\r\n                                          1: {color: '#a94442'},\r\n                                          2: {color: '#FFA500'},\r\n                                          3: {color: '#ffa578'},\r\n                                          4: {color: '#ff78a9'},\r\n                                          5: {color: '#1911bf'},\r\n                                          6: {color: '#10bf67'},\r\n                                          7: {color: '#00e822'},\r\n                                        }\r\n                                }}\r\n                                rootProps={{ 'data-testid': '1' }}\r\n                                />*/}\r\n\r\n                            <Label weight=\"bold\" text={\"Error States For Last 7 Days\"} color=\"#000\" size=\"10px\"></Label>\r\n                      </Col>\r\n                  </Row>\r\n            </Grid>\r\n            {(this.state.loader)?\r\n                <div className=\"fadeMe\">\r\n                    <div style={{position:'absolute', left:'45%', top: '40%'}}>\r\n                      <Loader\r\n                         type=\"ThreeDots\"\r\n                         color=\"#00BFFF\"\r\n                         height=\"150\"\r\n                         width=\"150\"\r\n                      />\r\n                    </div>\r\n                </div>:<div></div>\r\n            }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Analytics;\r\n"]},"metadata":{},"sourceType":"module"}