{"ast":null,"code":"(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.deepmerge = factory();\n  }\n})(this, function () {\n  return function deepmerge(target, src) {\n    var array = Array.isArray(src);\n    var dst = array && [] || {};\n\n    if (array) {\n      target = target || [];\n      dst = dst.concat(target);\n      src.forEach(function (e, i) {\n        if (typeof dst[i] === 'undefined') {\n          dst[i] = e;\n        } else if (typeof e === 'object') {\n          dst[i] = deepmerge(target[i], e);\n        } else {\n          if (target.indexOf(e) === -1) {\n            dst.push(e);\n          }\n        }\n      });\n    } else {\n      if (target && typeof target === 'object') {\n        Object.keys(target).forEach(function (key) {\n          dst[key] = target[key];\n        });\n      }\n\n      Object.keys(src).forEach(function (key) {\n        if (typeof src[key] !== 'object' || !src[key]) {\n          dst[key] = src[key];\n        } else {\n          if (!target[key]) {\n            dst[key] = src[key];\n          } else {\n            dst[key] = deepmerge(target[key], src[key]);\n          }\n        }\n      });\n    }\n\n    return dst;\n  };\n});","map":null,"metadata":{},"sourceType":"script"}