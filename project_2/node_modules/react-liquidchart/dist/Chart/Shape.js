'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _cloneChildren = require('react-offcharts-core/Utils/cloneChildren');

var _cloneChildren2 = _interopRequireDefault(_cloneChildren);

var _constants = require('../Helpers/constants');

var ch = _interopRequireWildcard(_constants);

var _dimensions = require('../Helpers/dimensions');

var _props = require('../Helpers/props');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Shape = function Shape(props) {
  var liquidFill = props.gradientId ? 'url(#' + props.gradientId + ')' : props.liquidStyle.fill;
  return _react2.default.createElement(
    'g',
    { className: ch.MAIN },
    _react2.default.createElement(
      'g',
      { className: ch.OUTER },
      _react2.default.createElement('path', _extends({
        d: (0, _dimensions.getOuterShape)(props)()
      }, props.outerStyle)),
      (0, _cloneChildren2.default)(props, { style: props.dryStyle })
    ),
    _react2.default.createElement(
      'g',
      { className: ch.INNER, clipPath: 'url(#' + props.clipId + ')' },
      _react2.default.createElement('path', {
        d: (0, _dimensions.getInnerShape)(props)(),
        fill: liquidFill
      }),
      (0, _cloneChildren2.default)(props, { style: props.wetStyle })
    )
  );
};

Shape.propTypes = {
  liquidStyle: _props.fillAndStroke,
  outerStyle: _props.fillAndStroke,
  wetStyle: _props.fillAndStroke,
  dryStyle: _props.fillAndStroke,
  clipId: _propTypes2.default.string,
  gradientId: _propTypes2.default.string
};

Shape.defaultProps = {
  liquidStyle: {},
  outerStyle: {},
  wetStyle: {},
  dryStyle: {}
};

exports.default = Shape;